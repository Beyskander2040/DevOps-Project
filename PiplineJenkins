pipeline {
    agent any

    tools {
        maven 'M2_HOME'
    }

    stages {
        stage('Checkout Git repository') {
            steps {
                echo 'Pulling'
                git branch: 'malek', credentialsId: 'malekzaidi123', url: 'https://github.com/Beyskander2040/DevOps-Project.git'
            }
        }

        stage('Maven Clean Compile') {
            steps {
                sh 'mvn clean'
                echo 'Running Maven Compile'
                sh 'mvn compile'
            }
        }

    //    stage('Tests - JUnit/Mockito') {
     //       steps {
     //           sh 'mvn test'
     //       }
     //   }

     //   stage('SonarQube Analysis') {
     //       steps {
     //          sh 'mvn clean verify sonar:sonar \
     //              -Dsonar.host.url=http://192.168.1.7:9000 \
     //               -Dsonar.login=squ_38e20cf8bc57c9b0462cd69a5a3a83529306a2d1'
     //       }
     //   }
//
       //         stage('Deploy to Nexus') {
      //              steps {
       //                 sh 'mvn deploy -DskipTests'
       //             }
        //        }
//
         stage('Build Docker Image') {
            steps {
                // Build the Docker image and tag it with the repository name
                sh 'docker build -t malekzaidi/my-image:latest .'
            }
        }

        stage('Login to Docker Hub') {
            environment {
                DOCKERHUB_CREDENTIALS_USR = 'malekzaidi'
                DOCKERHUB_CREDENTIALS_PSW = 'mohamed 2 foi'
            }
            steps {
                sh "echo ${DOCKERHUB_CREDENTIALS_PSW} | docker login -u ${DOCKERHUB_CREDENTIALS_USR} --password-stdin"
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                // Push the tagged Docker image to Docker Hub
                sh 'docker push malekzaidi/my-image:latest'
            }
        }
        stage('Deploy with Docker Compose') {
                            steps {
                                script {
                                        sh 'docker-compose up -d'
                                }
                            }
                        }
    }
}
